'use strict';

// -------------------------------------------------------------------------------------------------------------------------------------------
// 1. Create constructor fn for 'Car'

const Car = function (make, speed) {
  this.make = make;
  this.speed = speed;
};
// -------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------
// 2. Implement 'accelerate' method, increasing speed by 10
Car.prototype.accelerate = function () {
  this.speed += 10;
  console.log(`${this.make} going at: ${this.speed} km/h`);
};
// -------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------
// 3. Implement 'brake' method, decreasing speed by 5
Car.prototype.brake = function () {
  this.speed -= 5;
  console.log(`${this.make} going at: ${this.speed} km/h`);
};
// -------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------
// 4. Instantiate 2 Car objects, experiment with accelerate & brake methods
const bmw = new Car('BMW', 120);
const mercedes = new Car('Mercedes', 95);

bmw.accelerate();

mercedes.accelerate();
mercedes.accelerate();

bmw.brake();
bmw.brake();
mercedes.brake();
// -------------------------------------------------------------------------------------------------------------------------------------------
